buildscript {
  ext {
    springBootVersion = '1.5.8.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

dependencies {
  compile 'com.clubdynamics:clubdynamics-dto:0.1.4'
  compile('org.springframework.boot:spring-boot-starter-security')
  compile 'org.springframework.boot:spring-boot-starter-actuator'
  compile 'org.springframework.boot:spring-boot-starter-data-jpa'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'com.h2database:h2'
  compile 'io.springfox:springfox-swagger2:2.7.0'
  compile 'io.springfox:springfox-swagger-ui:2.7.0'
  compile 'com.auth0:java-jwt:3.3.0'
  compile 'org.apache.commons:commons-lang3:3.7'
  compile 'org.hibernate.validator:hibernate-validator:6.0.10.Final'
  compile 'javax.validation:validation-api:2.0.1.Final'
  
    
  testCompile 'org.springframework.boot:spring-boot-starter-test' 
  testCompile 'io.rest-assured:rest-assured-parent:3.0.6' 
  testCompile 'io.rest-assured:modules:3.0.6'
  testCompile 'io.rest-assured:rest-assured:3.0.0'
}

task wrapper(type: Wrapper) {  gradleVersion = "4.3.1" }

test {
  testLogging {
    events "passed", "skipped", "failed", "standardError"
    info {
      events "started", "passed", "skipped", "failed", "standardError"
      exceptionFormat "full"
    }
  }
}

bootRun {
    if (project.hasProperty('args') ) {
        args project.args.split('\\s+')
    }
}

task sourceJar(type: Jar) { from sourceSets.main.allJava }
